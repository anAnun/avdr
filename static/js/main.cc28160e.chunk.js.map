{"version":3,"sources":["images/avdr.jpg","Nav.js","Home.js","Info.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","state","continue","headerRemove","showModal","switch","componentDidMount","window","addEventListener","_this","resizeHeaderOnScroll","distanceY","pageYOffset","document","documentElement","scrollTop","homeHeaderName","getElementById","homeHeader","headerWrapper","buttons","resume","classList","add","remove","setState","closeModal","contact","props","history","push","react_default","a","createElement","Fragment","className","id","href","rel","React","Component","Home","src_Nav_0","target","src","map","Info","Contact","App","HashRouter","basename","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc28160e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avdr.f2c303b4.jpg\";","import React from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nclass Nav extends React.Component {\r\n  state = {\r\n    continue: false,\r\n    headerRemove: false,\r\n    showModal: false,\r\n    switch: \"off\"\r\n  };\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"scroll\", this.resizeHeaderOnScroll);\r\n  };\r\n\r\n  resizeHeaderOnScroll = () => {\r\n    const distanceY = window.pageYOffset || document.documentElement.scrollTop,\r\n      shrinkOn = 70,\r\n      homeHeaderName = document.getElementById(\"Home-header-name-id\"),\r\n      homeHeader = document.getElementById(\"Home-header-id\"),\r\n      headerWrapper = document.getElementById(\"Home-header-text-id\"),\r\n      buttons = document.getElementById(\"buttons-line-container-id\"),\r\n      resume = document.getElementById(\"Home-nav-buttons-after-id\");\r\n\r\n    if (distanceY > shrinkOn) {\r\n      homeHeaderName.classList.add(\"Home-content-name-smaller\");\r\n      homeHeaderName.classList.remove(\"Home-content-name\");\r\n\r\n      homeHeader.classList.add(\"Home-header-remove\");\r\n      homeHeader.classList.remove(\"Home-header\");\r\n\r\n      headerWrapper.classList.add(\"Home-header-text-remove\");\r\n      headerWrapper.classList.remove(\"Home-header-text\");\r\n\r\n      buttons.classList.add(\"buttons-line-container-smaller\");\r\n      buttons.classList.remove(\"buttons-line-container\");\r\n\r\n      resume.classList.add(\"Home-nav-buttons-after-remove\");\r\n      resume.classList.remove(\"Home-nav-buttons-after\");\r\n\r\n      this.setState({ headerRemove: true });\r\n    } else {\r\n      homeHeaderName.classList.remove(\"Home-content-name-smaller\");\r\n      homeHeaderName.classList.add(\"Home-content-name\");\r\n\r\n      homeHeader.classList.remove(\"Home-header-remove\");\r\n      homeHeader.classList.add(\"Home-header\");\r\n\r\n      headerWrapper.classList.remove(\"Home-header-text-remove\");\r\n      headerWrapper.classList.add(\"Home-header-text\");\r\n\r\n      buttons.classList.remove(\"buttons-line-container-smaller\");\r\n      buttons.classList.add(\"buttons-line-container\");\r\n      //   console.log(\"top\");\r\n      resume.classList.remove(\"Home-nav-buttons-after-remove\");\r\n      resume.classList.add(\"Home-nav-buttons-after\");\r\n\r\n      this.setState({ headerRemove: false });\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      showModal: false,\r\n      switch: \"off\"\r\n    });\r\n  };\r\n\r\n  contact = () => {\r\n    this.setState({\r\n      showModal: true,\r\n      switch: \"on\"\r\n    });\r\n  };\r\n\r\n  resume = () => {\r\n    this.props.history.push(\"/resume\");\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* {!this.state.headerRemove ? ( */}\r\n        <header className=\"Home-content-name\" id=\"Home-header-name-id\">\r\n          <div className=\"header-wrapper\" id=\"header-wrapper-id\">\r\n            <div className=\"Home-header\" id=\"Home-header-id\">\r\n              <div className=\"Home-header-text\" id=\"Home-header-text-id\">\r\n                ALL VALLEY DEALER RECOVERY\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"buttons-line-container\"\r\n              id=\"buttons-line-container-id\"\r\n            >\r\n              <a href=\"#/home/\" rel=\"noopener noreferrer\">\r\n                <button\r\n                  className=\"Home-nav-buttons-after\"\r\n                  id=\"Home-nav-buttons-after-id\"\r\n                >\r\n                  <span>Home</span>\r\n                </button>\r\n              </a>\r\n              <a href=\"#/info/\" rel=\"noopener noreferrer\">\r\n                <button\r\n                  className=\"Home-nav-buttons-after\"\r\n                  id=\"Home-nav-buttons-after-id\"\r\n                >\r\n                  <span>Info</span>\r\n                </button>\r\n              </a>\r\n              <a href=\"#/contact/\" rel=\"noopener noreferrer\">\r\n                <button\r\n                  className=\"Home-nav-buttons-after\"\r\n                  id=\"Home-nav-buttons-after-id\"\r\n                >\r\n                  <span>Contact</span>\r\n                </button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {/* ) : (\r\n            \"\"\r\n          )} */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport \"./Home.css\";\r\nimport map from \"./images/avdr.jpg\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Nav />\r\n        <div className=\"background-image-app\" />\r\n\r\n        <div className=\"pic-block\" />\r\n        <div>\r\n          Located in the heard of North Hollywood right by the 170 freeway!\r\n        </div>\r\n        <div className=\"map-container\">\r\n          <a href=\"https://goo.gl/maps/4aKR7c1yQQu\" target=\"_blank\">\r\n            <img src={map} />\r\n          </a>\r\n        </div>\r\n        <div className=\"bottom-block\">\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <div className=\"description\">\r\n            Welcome to All Valley Dealer Recovery, providing over 20 years of\r\n            service repossessing units for financial institutions, varying from\r\n            motorcycles, automobiles, water crafts and Recreational vehicles.\r\n          </div>\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\n\r\nclass Info extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Nav />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\n\r\nclass Contact extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Nav />\r\n        <div />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Info from \"./Info\";\nimport Contact from \"./Contact\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <HashRouter basename=\"https://ananun.github.io/avdr\">\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/info\" component={Info} />\n            <Route exact path=\"/contact\" component={Contact} />\n            <Route component={() => <div>404 Not found </div>} />\n          </Switch>\n        </HashRouter>\n      </React.Fragment>\n    );\n  }\n}\n\n//\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}